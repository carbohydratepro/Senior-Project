import re

    # regexes = [ # 年度, タイトル, 名前, 学部, 学科, 学籍番号, 提出日
    #     [2002, r'論文項目\n\n([^\n]+)', r'名\n\n([^\n]+)', r'大学([^\n]+)', "情報通信工学科", r'学籍番号:\s*([a-zA-Z0-9]+)', r'提出日([^\n]+)'],
    #     [2003, r'卒業論文概要\n\n([\s\S]*?)\n\n', r'氏\n\n名\n\n([^\n]+)', r'大学([^\n]+)', "情報通信工学科", r'学籍番号:\s*([a-zA-Z0-9]+)', r'提出日([^\n]+)'],
    #     [2010, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2011/1/24', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n']
    #     [2011, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2012/1/24', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n']
    #     ]
def return_re_info():
    """年度ごとに設定した正規表現を返す関数"""
    regexes = [ # 年度, 学部, 学科, 名前, 学籍番号, 提出日
        [2012, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2013/1/22', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2013, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2014/1/21', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2014, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2015/1/20', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2015, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2016/1/19', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2016, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2017/1/18', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2017, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2018/1/17', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2018, 'コンピュータサイエンス学部', 'コンピュータサイエンス学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2019/1/16', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2019, '工学部', '電気電子工学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2020/1/23', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2020, '工学部', '電気電子工学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2021/1/25', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2021, '工学部', '電気電子工学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2022/1/24', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],
        [2022, '工学部', '電気電子工学科', r'氏\n\n名\n\n([^\n]+)', r'学籍番号\n\n([a-zA-Z0-9]{8})', '2023/1/23', r'卒業論文\n\n論文題目\n\n([\s\S]*?)\n\n'],      
    ]
    return regexes

def extract_info(text, regex):
    # 情報を抽出
    info_match = re.search(regex, text)
    info = info_match.group(1) if info_match else None

    return info


def main():
    # 使用例
    text = """..\卒論PDF\2010\example.pdf"""
    def remove_spaces(text):
        return text.replace(" ", "")

    # text = remove_spaces(text)
    regex = r'[^\\/:*?"<>|\r\n]+$'
    try:
        name = extract_info(text, regex)
    except:
        name = True
    print(name)

if __name__ == "__main__":
    main()